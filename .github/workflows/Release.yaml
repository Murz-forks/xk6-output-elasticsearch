name: Build
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

defaults:
  run:
    shell: bash

env:
  APP_NAME: "k6"
  # We'll push to two DockerHub repos at once; `loadimpact/k6` repo is required for backwards compatibility
  LI_DOCKER_IMAGE_ID: "loadimpact/k6"
  DOCKER_IMAGE_ID: "grafana/k6"
  GHCR_IMAGE_ID: ${{ github.repository }}
  DEFAULT_GO_VERSION: "1.21.x"

jobs:
  build-docker:
    runs-on: ubuntu-latest
    env:
      VERSION: test1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build
        run: |
          docker buildx create \
            --name multibuilder \
            --platform linux/amd64,linux/arm64 \
            --bootstrap --use
          docker buildx build \
            --target release \
            --platform linux/amd64,linux/arm64 \
            -t $DOCKER_IMAGE_ID .
      - name: Check
        run: |
          docker buildx build --load -t $DOCKER_IMAGE_ID .
          # Assert that simple cases works for the new built image
          docker run $DOCKER_IMAGE_ID version

  # publish-github:
  #   runs-on: ubuntu-latest
  #   needs: [build-docker]
  #   if: ${{ startsWith(github.ref, 'refs/tags/v') && github.event_name != 'workflow_dispatch' }}
  #   env:
  #     VERSION: ${{ needs.configure.outputs.k6_version }}
  #   steps:
  #     - name: Create release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         set -x
  #         assets=()
  #         for asset in ./dist/*; do
  #           assets+=("$asset")
  #         done
  #         gh release create "$VERSION" "${assets[@]}" --target "$GITHUB_SHA" -F "./release notes/${VERSION}.md"
